<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2014-12-08T20:18:32</timestamp>
        <product version="5.5.4954.46574" user="Unregistered " serial="000-00-000-391">Dotfuscator and Analytics Community Edition</product>
    </header>
    <mapping>
        <module>
            <name>CAS.CodeProtect.dll</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{CECBC77B-E597-4029-990B-40FFF0CABCB1}</name>
                <newname>a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>$$method0x60000a3-1</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.AssemblyHelperAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Company</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Email</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Phone</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Product</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Company</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Email</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Phone</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Product</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Url</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>company</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>email</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>phone</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>product</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>url</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Company</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Email</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Phone</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Product</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Url</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.AssemblyKeyAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EncryptionKey</name>
                    </method>
                    <method>
                        <signature>string(System.Type)</signature>
                        <name>GetEncryptionKeyAttribute</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>encryptionKey</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>EncryptionKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.CodeProtectLP</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Security.Cryptography.RSACryptoServiceProvider, System.Collections.Generic.List`1&lt;System.ComponentModel.License&gt;)</signature>
                        <name>AddLicenseFromIsolatedStorage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Security.Cryptography.RSACryptoServiceProvider, System.Collections.Generic.List`1&lt;System.ComponentModel.License&gt;)</signature>
                        <name>AddLicenseFromPaths</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Type, System.Reflection.Assembly, System.Exception)</signature>
                        <name>BuildExceptionString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckIfWebApplication</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OpeningError</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile(System.Type, System.Security.Cryptography.RSACryptoServiceProvider)</signature>
                        <name>GetLicense</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.ComponentModel.License(System.ComponentModel.LicenseContext, System.Type, object, bool)</signature>
                        <name>GetLicense</name>
                    </method>
                    <method>
                        <signature>string(System.Type, System.Reflection.Assembly)</signature>
                        <name>GetProductNameFromAssembly</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest(string)</signature>
                        <name>ReadDeployManifest</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile, System.Security.Cryptography.RSACryptoServiceProvider, bool, string)</signature>
                        <name>Save</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type, CAS.Lib.CodeProtect.LicenseDsc.LicenseFile, System.Security.Cryptography.RSACryptoServiceProvider)</signature>
                        <name>Save</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OpeningError</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OpeningError&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>OpeningError</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.Controls.Licences</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>button_export_info_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetLicenseInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetLicenseMessageRequest</name>
                    </method>
                    <method>
                        <signature>string(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>GetMainLicenseInformation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Licences_Load</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>m_InstallLicBut_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OpenLicense</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>button_export_info</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>m_InstallLicBut</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.OpenFileDialog</signature>
                        <name>m_OpenFileDialog</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.SaveFileDialog</signature>
                        <name>m_saveFileDialog</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>m_textBoxLIcDescriptor</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.Controls.SplashScreen</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ActivateBuyNow</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg&gt;)</signature>
                        <name>add_OnMaintenancePeriodWarning</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg&gt;)</signature>
                        <name>add_OnShowSplashScreenChanged</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>AppendText</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>AppendTextIfInstantiated</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>buyNowButton_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseSplashScreen</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanBeClosed</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MaintenancePeriodWarning</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowSplashScreen</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>m_ShowItCheckBox_CheckedChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>m_Timer_Tick</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg&gt;)</signature>
                        <name>remove_OnMaintenancePeriodWarning</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg&gt;)</signature>
                        <name>remove_OnShowSplashScreenChanged</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanBeClosed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MaintenancePeriodWarning</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowSplashScreen</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>SplashScreen_Load</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>startAsmdButton_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>StartButtonLabel</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>m_BuyNowButton</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_CanBeClosed</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>m_Delay</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.Controls.SplashScreen</signature>
                        <name>m_Instance</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RichTextBox</signature>
                        <name>m_LicenseInfo</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.MaintenanceControlComponent</signature>
                        <name>m_MaintenanceControlComponent</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_MaintenancePeriodWarning</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_NewLine</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>m_PictureBox</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>m_ShowItCheckBox</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_ShowSplashScreen</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>m_StartAsmdButton</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_StartButtonFormat</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>m_Timer</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg&gt;</signature>
                        <name>OnMaintenancePeriodWarning</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg&gt;</signature>
                        <name>OnShowSplashScreenChanged</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>wholeCounterTime</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CanBeClosed</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MaintenancePeriodWarning</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowSplashScreen</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler`1&lt;CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg&gt;</signature>
                        <name>OnMaintenancePeriodWarning</name>
                    </event>
                    <event>
                        <signature>System.EventHandler`1&lt;CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg&gt;</signature>
                        <name>OnShowSplashScreenChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.Controls.SplashScreen/BoolEventArg</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>type</name>
                </genericparameter>
                <name>CAS.Lib.CodeProtect.Controls.SplashScreen/LogedIsLicensed`1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>TraceFailureReason</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>TraceWarning</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.Controls.UlockKeyDialog</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.EnvironmentAccess.UnlockKeyAssemblyContainer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.Assembly)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.ToolStripItemCollection)</signature>
                        <name>AddMenu</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.ToolStripItemCollection, CAS.Lib.CodeProtect.Controls.UlockKeyDialog/Invocker)</signature>
                        <name>AddMenu</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.ToolStripItemCollection, string)</signature>
                        <name>AddMenu</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.ToolStripItemCollection, System.Reflection.Assembly)</signature>
                        <name>AddMenu</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.LinkClickedEventArgs)</signature>
                        <name>m_HelpText_LinkClicked</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>m_OKButton_Click</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>m_CancelButton</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.UnlockKeyAssemblyContainer</signature>
                        <name>m_Container</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RichTextBox</signature>
                        <name>m_HelpText</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>m_OKButton</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>m_UlockKey</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.SplitContainer</signature>
                        <name>splitContainer1</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.Controls.UlockKeyDialog/Invocker</name>
                <newname>CAS.Lib.CodeProtect.Controls.UlockKeyDialog/a</newname>
                <methodlist>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.EnvironmentAccess.UnlockKeyAssemblyContainer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ClickHandler</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.UnlockKeyAssemblyContainer</signature>
                        <name>m_Container</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.CodeProtectHelpers</name>
                <methodlist>
                    <method>
                        <signature>System.Security.Cryptography.RSACryptoServiceProvider(string)</signature>
                        <name>CreateRSA</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GetEntropy</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Security.Cryptography.RSACryptoServiceProvider(unsigned int8[])</signature>
                        <name>ReadKeysFromProtectedArea</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Security.Cryptography.RSACryptoServiceProvider, unsigned int8[])</signature>
                        <name>SaveKeysInProtectedArea</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Security.Cryptography.RSA)</signature>
                        <name>SignXml</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Security.Cryptography.RSACryptoServiceProvider(unsigned int8[])</signature>
                        <name>TryReadKeysFromProtectedArea</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.XmlDocument, System.Security.Cryptography.RSA)</signature>
                        <name>VerifyXml</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.FileNames</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>ConstructApplicationDataFolder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream(System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)</signature>
                        <name>CreateLicenseFileStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeleteKeys</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ApplicationDataPath</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFilePath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ManifestFileName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetDir</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>KeysFilePath</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest()</signature>
                        <name>ProductManifest</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ManifestFileName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetDir</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnloadProductManifest</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ManifestFileName&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TargetDir&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LicExtension</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_ManifestFileName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_ParKeysFileName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ApplicationDataPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ManifestFileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TargetDir</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.FileNames/ManifestHandling</name>
                <newname>CAS.Lib.CodeProtect.EnvironmentAccess.FileNames/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ApplicationData</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest()</signature>
                        <name>get_DeployManifest</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetApplicationData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Initialization</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ApplicationData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnloadManifest</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ApplicationData&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest</signature>
                        <name>mDeployManifest</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.IsolatedStorageAccess</name>
                <newname>g</newname>
                <methodlist>
                    <method>
                        <signature>System.IO.IsolatedStorage.IsolatedStorageFileStream(System.IO.FileMode)</signature>
                        <name>CreateIsolatedStorageLicenseStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GenerateIsolatedFileName</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IO.IsolatedStorage.IsolatedStorageScope</signature>
                        <name>m_Scope</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.LicenseTraceSource</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.LicenseTraceSource()</signature>
                        <name>get_This</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Diagnostics.TraceEventType, int32, string)</signature>
                        <name>PrivateTrace</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>TraceError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>TraceInformation</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>TraceVerbose</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>TraceWarning</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.LicenseTraceSource</signature>
                        <name>m_Source</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.ManifestManagement</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>DeleteDeployManifest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Reflection.Assembly)</signature>
                        <name>GetPublisherFromAssemblyAttributes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest()</signature>
                        <name>ReadDeployManifest</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest(string)</signature>
                        <name>ReadDeployManifest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Reflection.Assembly, string)</signature>
                        <name>WriteDeployManifest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Reflection.AssemblyName, CAS.Lib.CodeProtect.EnvironmentAccess.ManifestManagement/ProductType, string, System.Uri, System.Uri, string)</signature>
                        <name>WriteDeployManifest</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.ManifestManagement/ProductType</name>
                <newname>d/ProductType</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.ManifestManagement/ProductType</signature>
                        <name>AllUsers</name>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.ManifestManagement/ProductType</signature>
                        <name>ClickOnce</name>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.ManifestManagement/ProductType</signature>
                        <name>SingleUser</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.UnlockKeyAssemblyContainer</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.Assembly)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetManifestResourcePath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream(string)</signature>
                        <name>GetManifestResourceStream</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.Assembly(string)</signature>
                        <name>LoadContainer</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CodeSurroundString</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Text.StringBuilder</signature>
                        <name>LastErrorMessage</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Reflection.Assembly</signature>
                        <name>m_Container</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>minCodeLength</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.WebApplicationLicenseCollector</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Type, System.ComponentModel.License)</signature>
                        <name>AddLicense2Collector</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type, System.Collections.Generic.List`1&lt;System.ComponentModel.License&gt;)</signature>
                        <name>AddLicenseFromCollector</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.WebApplicationLicenseCollector()</signature>
                        <name>get_LicenseCollector</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.IDictionary</signature>
                        <name>collectedLicenses</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.EnvironmentAccess.WebApplicationLicenseCollector</signature>
                        <name>m_LicenseCollector</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.EnvironmentAccess.WMIAccess</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GetMotherboardDeviceID</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GetProcessorId</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.IIsLicensed</name>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Licensed</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.TimeSpan&gt;()</signature>
                        <name>get_RunTime</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_Volumen</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Warning</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Licensed</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;System.TimeSpan&gt;()</signature>
                        <name>RunTime</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>Volumen</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>Warning</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.InstallContextNames</name>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_ApplicationDataPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Allusers</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Arphelplink</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Company</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DefaultPublisherName</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Email</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Manufacturer</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Productname</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Upgradecode</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>User</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ApplicationDataPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>type</name>
                </genericparameter>
                <name>CAS.Lib.CodeProtect.IsLicensed`1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;System.TimeSpan&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Licensed</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.TimeSpan&gt;()</signature>
                        <name>get_RunTime</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_Volumen</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Warning</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Licensed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.TimeSpan&gt;)</signature>
                        <name>set_RunTime</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_Volumen</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_Warning</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>TraceCurrentLicence</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>TraceFailureReason</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>TraceNoLicenseFile</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>TraceWarning</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Licensed&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.TimeSpan&gt;</signature>
                        <name>&lt;RunTime&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;Volumen&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Warning&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Licensed</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;System.TimeSpan&gt;()</signature>
                        <name>RunTime</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>Volumen</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>Warning</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LibInstaller</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.IDictionary)</signature>
                        <name>Commit</name>
                    </method>
                    <method>
                        <signature>void(System.Configuration.Install.InstallContext)</signature>
                        <name>CreateDeployManifest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.IDictionary)</signature>
                        <name>Install</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InstalLicense</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>InstalLicense</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, bool)</signature>
                        <name>InstalLicense</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, bool, string, string)</signature>
                        <name>InstalLicense</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>InstalLicense</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.IDictionary)</signature>
                        <name>Rollback</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetModifyRights</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.IDictionary)</signature>
                        <name>Uninstall</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.AbstractConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddFailureReasonText</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AddWorning</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, int32)</signature>
                        <name>DoIndent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConstraintType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GUID</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon()</signature>
                        <name>get_Icon</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RunTimeConstrain</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VolumeConstrain</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Warning</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode, string, int32&amp;)</signature>
                        <name>IntFromXML</name>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, string, int32)</signature>
                        <name>PrepareTextInformationAboutConstraint</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GUID</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>set_Icon</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_RunTimeConstrain</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_VolumeConstrain</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Warning</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode, string, string&amp;)</signature>
                        <name>StringFromXML</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Warning&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>icon</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile</signature>
                        <name>license</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_runTimeConstrain</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>m_TypeGuid</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_volumeConstrain</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ConstraintType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>GUID</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Icon()</signature>
                        <name>Icon</name>
                    </property>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RunTimeConstrain</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>VolumeConstrain</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Warning</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.AbstractContainerConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;()</signature>
                        <name>get_Items</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>parseConstraintsFields</name>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, string, int32)</signature>
                        <name>PrepareTextInformationAboutConstraint</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;)</signature>
                        <name>set_Items</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;</signature>
                        <name>constraints</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;()</signature>
                        <name>Items</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.AbstractLicenseData</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDirty</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Saved</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IFormatProvider</signature>
                        <name>culture</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsModified</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDirty</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>Type</name>
                </genericparameter>
                <name>CAS.Lib.CodeProtect.LicenseDsc.AbstractUpgradeableData`1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>UpgardeData</name>
                    </method>
                    <method>
                        <signature>void(string&amp;, string)</signature>
                        <name>UpgradeField</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.AndConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.BetaConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_EndDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UpdateURL</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_EndDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UpdateURL</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>end</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updateUrl</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>EndDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UpdateURL</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.DayTimeConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection()</signature>
                        <name>get_Items</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection)</signature>
                        <name>set_Items</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection</signature>
                        <name>timeRange</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection()</signature>
                        <name>Items</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.DemoConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>BuildErrorString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Condition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Duration</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_EndDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InfoURL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PurchaseURL</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_StartDate</name>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, string, int32)</signature>
                        <name>PrepareTextInformationAboutConstraint</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Condition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Duration</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_EndDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InfoURL</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PurchaseURL</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_StartDate</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>conditions</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>dateLastAccessed</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>end</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>infoUrl</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxDuration</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>purchaseUrl</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>start</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Condition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Duration</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>EndDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InfoURL</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PurchaseURL</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>StartDate</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.DesigntimeConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.DomainConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentDomain</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Domains</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentDomain</name>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Domains</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Web.HttpContext</signature>
                        <name>context</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentDomain</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Uri</signature>
                        <name>currentDomainUri</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.StringCollection</signature>
                        <name>domainCollection</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentDomain</name>
                    </property>
                    <property>
                        <signature>string[]()</signature>
                        <name>Domains</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.FunctionConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Allow</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UpdateURL</name>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, string, int32)</signature>
                        <name>PrepareTextInformationAboutConstraint</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Allow</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UpdateURL</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>m_Allows</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updateUrl</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Allow</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UpdateURL</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.OrConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.ProcessorConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_OS</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>OS</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.RuntimeConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MilitaryTime</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time()</signature>
                        <name>Now</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MilitaryTime</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>timeValue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>MilitaryTime</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time, CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time()</signature>
                        <name>get_End</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time()</signature>
                        <name>get_Start</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time)</signature>
                        <name>set_End</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time)</signature>
                        <name>set_Start</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time</signature>
                        <name>end</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time</signature>
                        <name>start</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time()</signature>
                        <name>End</name>
                    </property>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.Time()</signature>
                        <name>Start</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange[])</signature>
                        <name>AddRange</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection)</signature>
                        <name>AddRange</name>
                    </method>
                    <method>
                        <signature>bool(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection/TimeRangeEnumerator()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange)</signature>
                        <name>Insert</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void(int32, CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection/TimeRangeEnumerator</name>
                <methodlist>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRangeCollection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange()</signature>
                        <name>get_Current</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.IEnumerator</signature>
                        <name>baseEnumerator</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.IEnumerable</signature>
                        <name>temp</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Constraints.TimeRange()</signature>
                        <name>Current</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.UsageConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentDays</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentHitCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentUsageCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxDays</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxHitCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxUsageCount</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncrementDays</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncrementHits</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncrementUsage</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, string, int32)</signature>
                        <name>PrepareTextInformationAboutConstraint</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxDays</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxHitCount</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxUsageCount</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>currentDaysCount</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentHitCount</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentUsageCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>dateLastAccessed</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxDaysCount</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxHitCount</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxUsageCount</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>CurrentDays</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurrentHitCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurrentUsageCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxDays</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxHitCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxUsageCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Constraints.VersionConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Maximum</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Minimum</name>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, string, int32)</signature>
                        <name>PrepareTextInformationAboutConstraint</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Maximum</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Minimum</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlTextWriter)</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Version</signature>
                        <name>maxVersion</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>minVersion</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Maximum</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Minimum</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.CustomData</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringDictionary)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>AddCustomData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.CustomData(string)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.CustomData(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Specialized.StringDictionary()</signature>
                        <name>get_Items</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringDictionary)</signature>
                        <name>set_Items</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Specialized.StringDictionary</signature>
                        <name>data</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Specialized.StringDictionary()</signature>
                        <name>Items</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.IConstraint</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon()</signature>
                        <name>get_Icon</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDirty</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Saved</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>set_Icon</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, int32&amp;, int32&amp;)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Icon()</signature>
                        <name>Icon</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDirty</name>
                    </property>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.IConstraintItemProvider</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;()</signature>
                        <name>get_Items</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;()</signature>
                        <name>Items</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.ILicenseData</name>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDirty</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Saved</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDirty</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Issuer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Issuer(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Email</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Email</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Url</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(CAS.Lib.CodeProtect.LicenseDsc.Issuer)</signature>
                        <name>UpgardeData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>email</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fullName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>url</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Email</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Url</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddWorning</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;()</signature>
                        <name>CAS.Lib.CodeProtect.LicenseDsc.IConstraintItemProvider.get_Items</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;()</signature>
                        <name>get_Constraints</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationDate</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.CustomData()</signature>
                        <name>get_CustomData</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FailureReason</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_FirstUsesDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HardwareKeyToken</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HardwareKeyTokenBasedOnDevice</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InstallationInstanceGUID</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDirty</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Issuer()</signature>
                        <name>get_Issuer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseKey</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseKeyToken</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseUID</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicModificationUID</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModificationDate</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Product()</signature>
                        <name>get_Product</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RunTimeConstrain</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Statistics()</signature>
                        <name>get_Statistics</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.User()</signature>
                        <name>get_User</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VolumeConstrain</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Warnings</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetCustomFieldValue</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeLicense</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>InitializeLicense</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>InitializeLicense</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, bool, string)</signature>
                        <name>Instal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>Instal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile(string)</signature>
                        <name>LoadFile</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile(System.IO.FileInfo, System.Security.Cryptography.RSACryptoServiceProvider, bool)</signature>
                        <name>LoadFile</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile(System.IO.Stream)</signature>
                        <name>LoadFile</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile(System.IO.Stream, System.Security.Cryptography.RSACryptoServiceProvider)</signature>
                        <name>LoadFile</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.LicenseFile(System.IO.Stream, System.Security.Cryptography.RSACryptoServiceProvider, bool)</signature>
                        <name>LoadFile</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>parseConstraintsFields</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>parseCustomFields</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>parseLicense</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>parseLicenseItems</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveAllLicenses</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetCreationStatistics</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetIsDirty</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Security.Cryptography.RSA)</signature>
                        <name>SaveFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.Security.Cryptography.RSA)</signature>
                        <name>SaveFile</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;)</signature>
                        <name>set_Constraints</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreationDate</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.CustomData)</signature>
                        <name>set_CustomData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FailureReason</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_FirstUsesDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HardwareKeyToken</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HardwareKeyTokenBasedOnDevice</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InstallationInstanceGUID</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDirty</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Issuer)</signature>
                        <name>set_Issuer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicenseKeyToken</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicModificationUID</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ModificationDate</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Product)</signature>
                        <name>set_Product</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SetMotherboardDeviceID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SetProcessorId</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.Statistics)</signature>
                        <name>set_Statistics</name>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.User)</signature>
                        <name>set_User</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_Warnings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Xml.XmlDocument()</signature>
                        <name>ToXmlSignedXmlDocument</name>
                    </method>
                    <method>
                        <signature>System.Xml.XmlDocument(System.Security.Cryptography.RSA)</signature>
                        <name>ToXmlSignedXmlDocument</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Uninstal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>UpgardeData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CAS.Lib.CodeProtect.LicenseDsc.LicenseFile)</signature>
                        <name>UpgardeLicense</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UpgardeLicense</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>UpgardeLicense</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>ValidateLicense</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LicModificationUID&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Warnings&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;</signature>
                        <name>constraints</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>creationDate</name>
                    </field>
                    <field>
                        <signature>System.IFormatProvider</signature>
                        <name>culture</name>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.CustomData</signature>
                        <name>customData</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>failureMessage</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>firstUseDate</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDirty</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isReadOnly</name>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Issuer</signature>
                        <name>issuer</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_HardwareKey</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_InstallationInstanceGUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_LicenseKey</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_LicenseUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_MotherboardDeviceID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_ProcessorId</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_runTimeConstrain</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_volumeConstrain</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>modificationDate</name>
                    </field>
                    <field>
                        <signature>System.Globalization.DateTimeStyles</signature>
                        <name>my_DateStyle</name>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Product</signature>
                        <name>product</name>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Statistics</signature>
                        <name>statistics</name>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.User</signature>
                        <name>user</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;()</signature>
                        <name>CAS.Lib.CodeProtect.LicenseDsc.IConstraintItemProvider.Items</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;CAS.Lib.CodeProtect.LicenseDsc.IConstraint&gt;()</signature>
                        <name>Constraints</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreationDate</name>
                    </property>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.CustomData()</signature>
                        <name>CustomData</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FailureReason</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>FirstUsesDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HardwareKeyToken</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HardwareKeyTokenBasedOnDevice</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InstallationInstanceGUID</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDirty</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReadOnly</name>
                    </property>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Issuer()</signature>
                        <name>Issuer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseKey</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseKeyToken</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseUID</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicModificationUID</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ModificationDate</name>
                    </property>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Product()</signature>
                        <name>Product</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RunTimeConstrain</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SetMotherboardDeviceID</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SetProcessorId</name>
                    </property>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Statistics()</signature>
                        <name>Statistics</name>
                    </property>
                    <property>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.User()</signature>
                        <name>User</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>VolumeConstrain</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>Warnings</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.LicenseFileException</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Exception, string)</signature>
                        <name>TraceInnerExceptions</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Product</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool, string, string, string, string, string, string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.Assembly)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Product(string)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Product(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Developer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInGAC</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLicensed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicFileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ShortName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Developer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullName</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInGAC</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsLicensed</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ShortName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest)</signature>
                        <name>SetProduct</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(CAS.Lib.CodeProtect.LicenseDsc.Product)</signature>
                        <name>UpgardeData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>developer</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fullName</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInGac</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isLicensed</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>shortName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Developer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInGAC</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsLicensed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicFileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ShortName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.Statistics</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Statistics(string)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.Statistics(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AccessCount</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateTimeLastAccessed</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DaysCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HitCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UsageCount</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncrementAccessCount</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncrementDaysUsed</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncrementHitCount</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncrementUsageUsed</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetUserStatistics</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateLastAccessDate</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>accessCount</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>dateLastAccessed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>daysCount</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>hitCount</name>
                    </field>
                    <field>
                        <signature>System.IFormatProvider</signature>
                        <name>my_Culture</name>
                    </field>
                    <field>
                        <signature>System.Globalization.DateTimeStyles</signature>
                        <name>my_DateStyle</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>usageCount</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>AccessCount</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>DateTimeLastAccessed</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DaysCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>HitCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UsageCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.LicenseDsc.User</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.User(string)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CAS.Lib.CodeProtect.LicenseDsc.User(System.Xml.XmlNode)</signature>
                        <name>FromXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Email</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Organization</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Email</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Organization</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool(CAS.Lib.CodeProtect.LicenseDsc.User)</signature>
                        <name>UpgardeData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>email</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>organization</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Email</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Organization</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.MaintenanceControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MaintenanceControlWarning</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MaintenanceControlWarning</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>TraceWarning</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MaintenanceControlWarning&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>MaintenanceControlWarning</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.MaintenanceControlComponent</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.IContainer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Licensed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Warning</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CAS.Lib.CodeProtect.MaintenanceControl</signature>
                        <name>myTraceControl</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Licensed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Warning</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CAS.Lib.CodeProtect.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyHelperToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CaptionUpgardeLicense</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CASCommonResources</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultUnlockCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorStringUnableToUpgradeLicense</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_GetLicensee_UnableToGetLicenseFrom_default</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_GetLicensee_UnableToGetLicenseFrom_isolatedstorage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_GetLicensee_UnableToGetLicenseFrom_web</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_InstallLicense_CannotLoadContainer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_InstallLicense_NoContainer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_InstallLicense_NoLicenseFound</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_InstallLicense_NoLicForProductInContainer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_InstallLicense_NoManifest</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_InstallLicense_NoPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_OpenLicense_Signature</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_SaveLicense_UnableToSaveLicense</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_HardwareKeyToken</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_Issuer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_LicenseKeyToken</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_LicenseUID</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_Overupgrade</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_Product</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_Product_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_Product_Version</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrStr_UpgardeData_User</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionConstraint_Allowed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionConstraint_NOTAllowed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionConstraintDescriptor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionConstraintName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HowToUlock_docx</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_keys</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_License_request_message</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileErrorAssembly</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileErrorAValidLicense</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileErrorContactManufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileErrorContext</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileErrorIntro</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileErrorRSA</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileErrorType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseFileErrorTypeUnknown</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicMessageFunctionDataTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicMessageFunctionNoReason</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicMessageFunctionNotAllowed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MenuItemText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MenuItemToolTipText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductUnlockCodeStringToRemove</name>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon()</signature>
                        <name>get_SecurityUnlock</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SplashScreenDefaultAppMissing</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SplashScreenStartASMDButtonText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SplashScreenStartButtonFormat</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SplashScreenStoreUrl</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SplashScreenWaitMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Tx_LicCap</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Tx_LicDemoModeInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Tx_LicDemoWriteErr</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Tx_LicNoFileErr</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Tx_LicValidationErr</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Tx_LicVolumeConstrainErr</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_UAASMDInstallbanner</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnlockFailureMessge</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnlockFindingLicenseFailureMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnlockInalationFailureCaption</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnlockSuccessCaption</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnlockSuccessMessge</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UsageConstraint_Days</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UsageConstraint_Hit</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UsageConstraint_Usage</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyHelperToString</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CaptionUpgardeLicense</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CASCommonResources</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultUnlockCode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorStringUnableToUpgradeLicense</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_GetLicensee_UnableToGetLicenseFrom_default</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_GetLicensee_UnableToGetLicenseFrom_isolatedstorage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_GetLicensee_UnableToGetLicenseFrom_web</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_InstallLicense_CannotLoadContainer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_InstallLicense_NoContainer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_InstallLicense_NoLicenseFound</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_InstallLicense_NoLicForProductInContainer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_InstallLicense_NoManifest</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_InstallLicense_NoPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_OpenLicense_Signature</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_SaveLicense_UnableToSaveLicense</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_HardwareKeyToken</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_Issuer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_LicenseKeyToken</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_LicenseUID</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_Overupgrade</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_Product</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_Product_Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_Product_Version</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrStr_UpgardeData_User</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionConstraint_Allowed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionConstraint_NOTAllowed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionConstraintDescriptor</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionConstraintName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HowToUlock_docx</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>keys</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>License_request_message</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileErrorAssembly</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileErrorAValidLicense</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileErrorContactManufacturer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileErrorContext</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileErrorIntro</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileErrorRSA</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileErrorType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseFileErrorTypeUnknown</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicMessageFunctionDataTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicMessageFunctionNoReason</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicMessageFunctionNotAllowed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MenuItemText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MenuItemToolTipText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductUnlockCodeStringToRemove</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Icon()</signature>
                        <name>SecurityUnlock</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SplashScreenDefaultAppMissing</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SplashScreenStartASMDButtonText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SplashScreenStartButtonFormat</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SplashScreenStoreUrl</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SplashScreenWaitMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Tx_LicCap</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Tx_LicDemoModeInfo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Tx_LicDemoWriteErr</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Tx_LicNoFileErr</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Tx_LicValidationErr</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Tx_LicVolumeConstrainErr</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>UAASMDInstallbanner</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnlockFailureMessge</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnlockFindingLicenseFailureMessage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnlockInalationFailureCaption</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnlockSuccessCaption</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnlockSuccessMessge</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UsageConstraint_Days</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UsageConstraint_Hit</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UsageConstraint_Usage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>57</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>622</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>168</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>190</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>2</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>10</statistic>
            <statistic>17,54%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>134</statistic>
            <statistic>21,54%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>114</statistic>
            <statistic>67,86%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0,00%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0,00%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>81</statistic>
            <statistic>13,02%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>20</statistic>
            <statistic>3,22%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>14</statistic>
            <statistic>2,25%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>8</statistic>
            <statistic>1,29%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>5</statistic>
            <statistic>0,80%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>3</statistic>
            <statistic>0,48%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>2</statistic>
            <statistic>0,32%</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>